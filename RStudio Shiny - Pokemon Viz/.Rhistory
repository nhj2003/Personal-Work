glist.csv')
leg <- read.csv('data/leglist.csv')
sub_leg <- read.csv('data/sub_leglist.csv')
leg <- read.csv('data/leglist.csv')
mythical <- read.csv('data/mythicallist.csv')
View(mythical)
'Moltres' in sub_leg
any('Moltres' %in% sub_leg)
any('Moltres' %in% leg)
any('Moltres' %in% mythical)
View(sub_leg)
any('Moltres' %in% mythical[X0])
any('Moltres' %in% mythical[0])
any('Moltres' %in% mythical[:0])
any('Moltres' %in% mythical[,1])
any('Moltres' %in% sub_leg[0])
any('Moltres' %in% sub_leg[1])
any('Moltres' %in% sub_leg['X0'])
any('Moltres' %in% sub_leg)
any('Moltres' %in% sub_leg[, 1])
sub_leg <- as.list(read.csv('data/sub_leglist.csv'))
sub_leg
sub_leg[0]
sub_leg[[0]
]
sub_leg[[0]]
sub_leg <- as.list(read.csv('data/sub_leglist.csv')['X0'])
sub_leg
sub_leg <- as.list(read.csv('data/sub_leglist.csv')['X0'])
sub_leg['X0']
sub_leg[['X0']]
sub_leg <- as.list(read.csv('data/sub_leglist.csv')[['X0']])
mythical <- read.csv('data/mythicallist.csv')[['X0']]
leg <- read.csv('data/leglist.csv')[['X0']]
'Mew' %in% mythical
sub_leg <- read.csv('data/sub_leglist.csv')[['X0']]
# Lists containing information on whether a pokemon is a pseudo_legendary, sub_legendary,
# legendary, or mythical
# Pseudo-legendary is small enough that I can just type it out
pseudo <- c('data/pseudolist.csv')[['X0']]
# Lists containing information on whether a pokemon is a pseudo_legendary, sub_legendary,
# legendary, or mythical
# Pseudo-legendary is small enough that I can just type it out
pseudo <- c('data/pseudolist.csv')[['X0']]
# Lists containing information on whether a pokemon is a pseudo_legendary, sub_legendary,
# legendary, or mythical
# Pseudo-legendary is small enough that I can just type it out
pseudo <- c('data/pseudolist.csv')
pseudo
View(pseudo)
# Lists containing information on whether a pokemon is a pseudo_legendary, sub_legendary,
# legendary, or mythical
# Pseudo-legendary is small enough that I can just type it out
pseudo <- c('data/pseudolist.csv')
View(pseudo)
# Lists containing information on whether a pokemon is a pseudo_legendary, sub_legendary,
# legendary, or mythical
# Pseudo-legendary is small enough that I can just type it out
pseudo <- read.csv('data/pseudolist.csv')[['X0']]
pseudo
runApp()
runApp()
grepl('Mega', poke, fixed = TRUE)
runApp()
grep('Mega', poke, fixed = TRUE)
grepl('Mega', poke, fixed = TRUE)
grepl('Mega', poke$Name, fixed = TRUE)
filter(df, grepl('Mega', Name))
filter(poke, grepl('Mega', Name))
~filter(poke, grepl('Mega', Name))
not filter(poke, grepl('Mega', Name))
!filter(poke, grepl('Mega', Name))
grepl('Mega', poke$Name, fixed = TRUE)
!grepl('Mega', poke$Name, fixed = TRUE)
filter(poke, !grepl('Mega', poke$Name, fixed = TRUE))
pseudo
grepl(pseudo, poke$Name, fixed = TRUE)
filter(poke, Name %in% pseudo)
filter(poke, Name !%in% pseudo)
filter(poke, !Name %in% pseudo)
filter(!poke$Name %in% pseudo)
filter(poke, !Name %in% pseudo)
filter(poke, grepl('Dynamax' %in% Name))
grepl(pseudo, poke$Name, fixed = TRUE)
grepl('Dynamax', poke$Name, fixed = TRUE)
poke[grepl('Dynamax', poke$Name, fixed = TRUE)]
poke[[grepl('Dynamax', poke$Name, fixed = TRUE)]]
[grepl('Dynamax', poke$Name, fixed = TRUE)]
grepl('Dynamax', poke$Name, fixed = TRUE)
grepl('Dynamax', poke$Name, fixed = TRUE)
grepl('Mega', poke$Name, fixed = TRUE)
poke[grepl('Mega', poke$Name, fixed = TRUE)]
filter(df, grepl('Mega', Name, fixed = TRUE))
grepl('Mega', poke$Name, fixed = TRUE)
filter(poke, grepl('Mega', Name, fixed = TRUE))
filter(poke, grepl('Mega', !Name, fixed = TRUE))
filter(poke, !grepl('Mega', Name, fixed = TRUE))
runApp()
runApp()
runApp()
runApp()
mean(poke$HP)
new = poke %>% to_be_leggy(group = c('Legendaries'))
to_be_leggy <- function(df, group) {
if ('Pseudo Legendaries' %in% group) {
filter(df, !Name %in% pseudo)
}
if ('Sub Legendaries' %in% group) {
filter(df, !Name %in% sub_leg)
}
if ('Legendaries' %in% group) {
filter(df, !Name %in% leg)
}
if ('Mythicals' %in% group) {
filter(df, !Name %in% mythical)
}
if ('Megas' %in% group) {
filter(df, !grepl('Mega', Name, fixed = TRUE))
} else {
df
}
}
new = poke %>% to_be_leggy(group = c('Legendaries'))
View(new)
new = new %>% to_be_leggy(group = c('Sub Legendaries'))
View(new)
runApp()
new = poke %>% to_be_leggy(group = c('Legendaries'))
new = new %>% to_be_leggy(group = c('Sub Legendaries'))
View(new)
to_be_leggy(poke, group = 'Legendaries')
new = to_be_leggy(poke, group = 'Legendaries')
View(new)
'Legendaries' %in% 'Sub Legendaries'
'Legendaries' %in% 'Legendaries'
filter(poke, !Name %in% leg)
new = filter(poke, !Name %in% leg)
View(new)
new = filter(poke, grepl('Mewtwo', Name))
View(new)
new = filter(poke, !grepl('Mewtwo', Name))
new = filter(poke, !grepl(c('Mewtwo', 'Lugia'), Name))
new = filter(poke, !Name %in% leg)
new = to_be_leggy(poke, 'Legendaries')
new = to_be_leggy(poke, 'Pseudo Legendaries')
new = to_be_leggy(poke, 'Pseudo Legendaries')
new = to_be_leggy(poke, 'Megas')
new = to_be_leggy(poke, 'Megas')
to_be_mega <- function(df, group) {
if ('Megas' %in% group) {
filter(df, !grepl('Mega', Name, fixed = TRUE))
} else {
df
}
}
new = to_be_mega(poke, 'Mega')
new = to_be_mega(poke, 'Megas')
to_be_mythical <- function(df, group) {
if ('Mythicals' %in% group) {
filter(df, !Name %in% mythical)
}
}
new = to_be_mythicals(poke, 'Mythicals')
new = to_be_mythicals(poke, 'Mythicals')
new = to_be_mythical(poke, 'Mythicals')
to_be_leggy <- function(df, group) {
if ('Legendaries' %in% group) {
filter(df, !Name %in% leg)
}
}
new = to_be_leggy(poke, 'Legendaries')
to_be_sub <- function(df, group) {
if ('Sub Legendaries' %in% group) {
filter(df, !Name %in% sub_leg)
}
}
new = to_be_sub(poke, 'Sub Legendaries')
to_be_pseudo <- function(df, group) {
if ('Pseudo Legendaries' %in% group) {
filter(df, !Name %in% pseudo)
}
}
new = to_be_sub(poke, 'Pseudo Legendaries')
new = to_be_sub(poke, 'Pseudo Legendaries')
new = to_be_pseudo(poke, 'Pseudo Legendaries')
filter(poke, !sapply(mythical, function(x) grepl(x, Name)))
poke %>%
filter(!sapply(mythical, function(x) grepl(x, Name)))
new = to_be_leggy(poke, 'Legendaries')
filter(poke, !sapply(mythical, function(x) grepl(x, Name, ignore.case = TRUE)))
filter(poke, !lapply(mythical, function(x) grepl(x, Name, ignore.case = TRUE)))
filter(poke, !sapply(mythical, function(x) grepl(x, Name, ignore.case = TRUE))
)
!sapply(mythical, function(x) grepl(x, poke$Name))
!sapply(mythical, function(x) grepl(x, poke$Name))
!sapply(mythical, function(x) !grepl(x, poke$Name))
!sapply(mythical, function(x) !grepl(x, poke$Name))
!sapply(mythical, function(x) !grepl(x, poke$Name)).shape
what = !sapply(mythical, function(x) !grepl(x, poke$Name))
View(what)
what = !sapply(mythical, function(x) !grepl(x, poke$Name, fixed = TRUE))
mean(new$HP)
mean(poke$HP)
runApp()
filter(poke, !Name %in% pseudo)
new = filter(poke, !Name %in% pseudo)
runApp()
filter(poke, !grepl('Mega', Name, fixed = TRUE))
filter(poke, 1grepl('Mega', Name, fixed = TRUE))
filter(poke, grepl('Mega', Name, fixed = TRUE))
new = filter(poke, grepl('Mega', Name, fixed = TRUE))
View(new)
new = filter(poke, grepl('Mega', Name, fixed = TRUE) && !'Meganium')
new = filter(poke, grepl('Mega', Name, fixed = TRUE) && 'Meganium' %in% Name)
new = filter(poke, grepl('Mega', Name, fixed = TRUE))
grepl('Mega', Name, fixed = TRUE)
grepl('Mega', poke$Name, fixed = TRUE)
grepl('Mega', poke$Name)
new = filter(poke, grepl('Mega', Name))
new = filter(poke, grepl(' Mega ', Name))
new = filter(poke, Name %in% leg)
new <- sapply(leg, function(x) any(grepl(poke$Name, x)))
new <- sapply(poke$Name, function(x) any(grepl(leg, x)))
warnings()
new <- sapply(poke$Name, function(x) any(grepl(leg, x)))
leg
poke[new]
poke[[new]]
poke[new,]
new = poke[new,]
paste(leg, collapse = "|")
pattern = paste(leg, collapse = "|")
grepl(pattern, poke$Name)
poke[grepl(pattern, poke$Name), ]
new = poke[grepl(pattern, poke$Name), ]
pattern = paste(mythical, collapse = "|")
new = poke[grepl(pattern, poke$Name), ]
pattern
pattern = "Mew\\b|Celebi|Jirachi|Deoxys|Phione|Manaphy|Darkrai|Shaymin|Arceus|Victini|Keldeo|Meloetta|Genesect|Diancie|Hoopa|Volcanion|Magearna|Marshadow|Zeraora|Meltan|Melmetal|Zarude|Pecharunt"
new = poke[grepl(pattern, poke$Name), ]
runApp()
filter(poke, !grepl(pattern, Name))
runApp()
pattern = "Mew\\b|Celebi|Jirachi|Deoxys|Phione|Manaphy|Darkrai|Shaymin|Arceus|Victini|Keldeo|Meloetta|Genesect|Diancie|Hoopa|Volcanion|Magearna|Marshadow|Zeraora|Meltan|Melmetal|Zarude|Pecharunt"
filter(df, !grepl(pattern, poke$Name))
filter(poke, !grepl(pattern, Name))
runApp()
runApp()
"Average" + "hello"
runApp()
runApp()
list('Total' = c(seq(380, 505, by = 10), c(380, 505)))
hello = list('Total' = c(seq(380, 505, by = 10), c(380, 505)))
hello[[0]]
hello[[1]]
hello[[2]]
hello = list('Total' = list(seq(380, 505, by = 10), c(380, 505)))
hello[[1]]
hello[[2]]
hello[[1]]
hello[[1]][[1]]
hello[[1]][[2]]
runApp()
poke %>% summarise(Total = mean(Total),)
poke %>% summarise(Total = c(min(Total), max(Total))
)
poke %>% reframe(Total = c(min(Total), max(Total))
)
poke %>% group_by(Generation) %>%
summarise(Total = mean(Total),)
(poke %>% group_by(Generation) %>%
summarise(Total = mean(Total))) %>%
reframe(Total = c(min(Total), max(Total))
)
(poke %>% group_by(Generation) %>%
summarise(Total = mean(Total))) %>%
reframe(Total = c(min(Total), max(Total)))
poke %>%
group_by(Generation) %>%
summarise(
Mean_HP = mean(HP, na.rm = TRUE),
Mean_Attack = mean(Attack, na.rm = TRUE),
Mean_Defense = mean(Defense, na.rm = TRUE),
Mean_Sp_Attack = mean(Sp..Attack, na.rm = TRUE),
Mean_Sp_Defense = mean(Sp..Defense, na.rm = TRUE),
Mean_Speed = mean(Speed, na.rm = TRUE),
Total = mean(Total, na.rm = TRUE)
) %>%
reframe(
Min_HP = min(Mean_HP),
Max_HP = max(Mean_HP),
Min_Attack = min(Mean_Attack),
Max_Attack = max(Mean_Attack),
Min_Defense = min(Mean_Defense),
Max_Defense = max(Mean_Defense),
Min_Sp_Attack = min(Mean_Sp_Attack),
Max_Sp_Attack = max(Mean_Sp_Attack),
Min_Sp_Defense = min(Mean_Sp_Defense),
Max_Sp_Defense = max(Mean_Sp_Defense),
Min_Speed = min(Mean_Speed),
Max_Speed = max(Mean_Speed),
Min_Total = min(Total),
Max_Total = max(Total)
)
poke %>%
group_by(Generation) %>%
summarise(
Mean_HP = mean(HP, na.rm = TRUE),
Mean_Attack = mean(Attack, na.rm = TRUE),
Mean_Defense = mean(Defense, na.rm = TRUE),
Mean_Sp_Atk = mean(Sp..Attack, na.rm = TRUE),  # Renamed to Sp..Atk
Mean_Sp_Def = mean(Sp..Defense, na.rm = TRUE), # Renamed to Sp..Def
Mean_Speed = mean(Speed, na.rm = TRUE),
Total = mean(Total, na.rm = TRUE)
) %>%
reframe(
HP = paste("Min:", min(Mean_HP), "Max:", max(Mean_HP)),
Attack = paste("Min:", min(Mean_Attack), "Max:", max(Mean_Attack)),
Defense = paste("Min:", min(Mean_Defense), "Max:", max(Mean_Defense)),
Sp_Atk = paste("Min:", min(Mean_Sp_Atk), "Max:", max(Mean_Sp_Atk)),  # Renamed column
Sp_Def = paste("Min:", min(Mean_Sp_Def), "Max:", max(Mean_Sp_Def)),  # Renamed column
Speed = paste("Min:", min(Mean_Speed), "Max:", max(Mean_Speed)),
Total = paste("Min:", min(Total), "Max:", max(Total))
)
poke %>%
group_by(Generation) %>%
summarise(
Mean_HP = mean(HP, na.rm = TRUE),
Mean_Attack = mean(Attack, na.rm = TRUE),
Mean_Defense = mean(Defense, na.rm = TRUE),
Mean_Sp_Atk = mean(Sp..Atk, na.rm = TRUE),  # Renamed to Sp..Atk
Mean_Sp_Def = mean(Sp..Def, na.rm = TRUE), # Renamed to Sp..Def
Mean_Speed = mean(Speed, na.rm = TRUE),
Total = mean(Total, na.rm = TRUE)
) %>%
reframe(
HP = paste("Min:", min(Mean_HP), "Max:", max(Mean_HP)),
Attack = paste("Min:", min(Mean_Attack), "Max:", max(Mean_Attack)),
Defense = paste("Min:", min(Mean_Defense), "Max:", max(Mean_Defense)),
Sp_Atk = paste("Min:", min(Mean_Sp_Atk), "Max:", max(Mean_Sp_Atk)),  # Renamed column
Sp_Def = paste("Min:", min(Mean_Sp_Def), "Max:", max(Mean_Sp_Def)),  # Renamed column
Speed = paste("Min:", min(Mean_Speed), "Max:", max(Mean_Speed)),
Total = paste("Min:", min(Total), "Max:", max(Total))
)
new = poke %>%
group_by(Generation) %>%
summarise(
Mean_HP = mean(HP, na.rm = TRUE),
Mean_Attack = mean(Attack, na.rm = TRUE),
Mean_Defense = mean(Defense, na.rm = TRUE),
Mean_Sp_Atk = mean(Sp..Atk, na.rm = TRUE),  # Renamed to Sp..Atk
Mean_Sp_Def = mean(Sp..Def, na.rm = TRUE), # Renamed to Sp..Def
Mean_Speed = mean(Speed, na.rm = TRUE),
Total = mean(Total, na.rm = TRUE)
) %>%
reframe(
HP = paste("Min:", min(Mean_HP), "Max:", max(Mean_HP)),
Attack = paste("Min:", min(Mean_Attack), "Max:", max(Mean_Attack)),
Defense = paste("Min:", min(Mean_Defense), "Max:", max(Mean_Defense)),
Sp_Atk = paste("Min:", min(Mean_Sp_Atk), "Max:", max(Mean_Sp_Atk)),  # Renamed column
Sp_Def = paste("Min:", min(Mean_Sp_Def), "Max:", max(Mean_Sp_Def)),  # Renamed column
Speed = paste("Min:", min(Mean_Speed), "Max:", max(Mean_Speed)),
Total = paste("Min:", min(Total), "Max:", max(Total))
)
View(new)
new = poke %>%
group_by(Generation) %>%
summarise(
Mean_HP = mean(HP, na.rm = TRUE),
Mean_Attack = mean(Attack, na.rm = TRUE),
Mean_Defense = mean(Defense, na.rm = TRUE),
Mean_Sp_Atk = mean(Sp..Atk, na.rm = TRUE),  # Renamed to Sp..Atk
Mean_Sp_Def = mean(Sp..Def, na.rm = TRUE), # Renamed to Sp..Def
Mean_Speed = mean(Speed, na.rm = TRUE),
Total = mean(Total, na.rm = TRUE)
) %>%
reframe(
HP = c(min(Mean_HP), max(Mean_HP)),
Attack = c(min(Mean_Attack), max(Mean_Attack)),
Defense = c(min(Mean_Defense), max(Mean_Defense)),
Sp_Atk = c(min(Mean_Sp_Atk), max(Mean_Sp_Atk)),  # Renamed column
Sp_Def = c(min(Mean_Sp_Def), max(Mean_Sp_Def)),  # Renamed column
Speed = c(min(Mean_Speed), max(Mean_Speed)),
Total = c(min(Total), max(Total))
)
View(new)
poke %>%
group_by(Generation) %>%
summarise(
Mean_HP = mean(HP, na.rm = TRUE),
Mean_Attack = mean(Attack, na.rm = TRUE),
Mean_Defense = mean(Defense, na.rm = TRUE),
Mean_Sp_Atk = mean(Sp..Atk, na.rm = TRUE),  # Renamed to Sp..Atk
Mean_Sp_Def = mean(Sp..Def, na.rm = TRUE), # Renamed to Sp..Def
Mean_Speed = mean(Speed, na.rm = TRUE),
Total = mean(Total, na.rm = TRUE)
) %>%
reframe(
HP = c(min(Mean_HP), max(Mean_HP)),
Attack = c(min(Mean_Attack), max(Mean_Attack)),
Defense = c(min(Mean_Defense), max(Mean_Defense)),
Sp_Atk = c(min(Mean_Sp_Atk), max(Mean_Sp_Atk)),  # Renamed column
Sp_Def = c(min(Mean_Sp_Def), max(Mean_Sp_Def)),  # Renamed column
Speed = c(min(Mean_Speed), max(Mean_Speed)),
Total = c(min(Total), max(Total))
)
bounds <- list(
'Total' = list(seq(400, 510, by = 10), c(400, 510)),
'HP' = list(seq(60, 80, by = 5), c(60, 80)),
'Attack' = list(seq(65, 95, by = 5), c(65, 95)),
'Defense' = list(seq(65, 90, by = 5), c(65, 90)),
'Sp. Attack' = list(seq(60, 90, by = 5), c(60, 90)),
'Sp. Defense' = list(seq(65, 85, by = 5), c(65, 85)),
'Speed' = list(seq(60, 80, by = 5), c(60, 80))
)
bounds['Total']
bounds['Total'][[1]]
bounds['Total'][[1]][[1]]
bounds['Total'][1]
bounds['Total'][1][1]
bounds['Total'][1][1][1]
bounds['Total'][[1]]
bounds['Total'][[1]][[1]]
bounds['Total'][[1]][[2]]
runApp()
poke <- poke %>%
rename(Sp..Atk = 'Sp. Attack',
Sp..Def = 'Sp. Defense')
poke <- poke %>%
rename(`Sp..Atk` = 'Sp. Attack',
`Sp..Def` = 'Sp. Defense')
poke <- poke %>%
rename('Sp. Attack' = Sp..Atk,
'Sp. Defense' = Sp..Def)
View(poke)
poke.columns
colnames(poke)
colnames(poke)[[2:8]]
colnames(poke)[2:8]
colnames(poke)[3:8]
colnames(poke)[3:9]
runApp()
runApp()
poke %>% summarise('Sp. Attack' = mean('Sp. Attack'))
poke %>% summarise('Sp. Attack' = mean(`Sp. Attack`))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
bounds
bounds['Speed']
bounds['Speed'][[1]]
bounds['Speed'][[1]][[1]]
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("extrafont")
# Adding custom font
font_add("Pokemon", "www/pokemon-ds-font.ttf")
library(extrafont)
# Adding custom font
font_add("Pokemon", "www/pokemon-ds-font.ttf")
library(extrafont)
# Adding custom font
font_add("Pokemon", "www/pokemon-ds-font.ttf")
install.packages("showtext")
library(showtext)
runApp()
runApp()
runApp()
runApp()
poke %>%
summarise()
poke %>%
group_by(Type) %>%
summarise(Total = c(min(Total), max(Total)))
poke %>%
group_by(Type) %>%
reframe(Total = c(min(Total), max(Total)))
runApp()
runApp()
poke %>%
reframe(Total = c(min(Total), max(Total)),)
poke %>%
reframe(Total = c(min(Total), max(Total)),
Attack = c(min(Attack), max(Attack)))
poke %>%
reframe(Total = c(min(Total), max(Total)),
Attack = c(min(Attack), max(Attack)),
Defense = c(min(Defense), max(Defense)))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
